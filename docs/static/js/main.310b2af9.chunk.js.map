{"version":3,"sources":["pages/home/index.js","history.js","App.js","serviceWorker.js","index.js"],"names":["Home","react_default","a","createElement","className","onClick","window","open","class","alert","createHistory","App","react_router","history","Fragment","path","exact","component","React","Component","Boolean","location","hostname","match","ReactDOM","render","src_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.310b2af9.chunk.js","sourcesContent":["import React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport \"./style.css\";\n\nfunction Home() {\n  return (\n    <div className=\"home\">\n      <div className=\"header\">\n        <div className=\"title\">Christian Terence</div>\n      </div>\n\n      <div className=\"main\">\n        <div className=\"main-title\">\n          <p>About Me:</p>\n        </div>\n        <div className=\"main-body\">\n          <div\n            className=\"photo\"\n            onClick={() => {\n              window.open(\n                \"https://www.linkedin.com/in/christianterencecabauatan/\"\n              );\n            }}\n          />\n          <div className=\"description\">\n            <p>\n              My name is Christian Terence Cabauatan. Currently a Senior at\n              Virginia Tech. I'm looking for a Full-Time Position to utilize\n              skills in Computer Science; Special Interests in Software\n              Development: Mobile and Web.\n            </p>\n            <div className=\"desc-buttons\">\n              <div\n                className=\"desc-button\"\n                onClick={() => {\n                  window.open(\n                    \"https://drive.google.com/open?id=1AbFNqtFQcjMl1CggIq_RM5ZHCEZqgznc\"\n                  );\n                }}\n              >\n                resume\n              </div>\n\n              <div\n                className=\"desc-button\"\n                onClick={() => {\n                  window.open(\n                    \"https://www.linkedin.com/in/christianterencecabauatan/\"\n                  );\n                }}\n              >\n                linkedin\n              </div>\n\n              <div\n                className=\"desc-button\"\n                onClick={() => {\n                  window.open(\"https://github.com/christerence\");\n                }}\n              >\n                github\n              </div>\n            </div>\n          </div>\n          <div className=\"projects\">\n            <div\n              className=\"project-item\"\n              onClick={() => {\n                window.open(\"https://github.com/christerence/StudentCompanion\");\n              }}\n            >\n              Student Companion\n            </div>\n            <div\n              className=\"project-item\"\n              onClick={() => {\n                window.open(\"https://github.com/christerence/spotify-playlist\");\n              }}\n            >\n              Spotify Playlist\n            </div>\n            <div\n              className=\"project-item\"\n              onClick={() => {\n                window.open(\"https://github.com/christerence/Blabber\");\n              }}\n            >\n              Blabber\n            </div>\n          </div>\n        </div>\n      </div>\n\n      <div className=\"side\">\n        <div className=\"side-body\">\n          <div class=\"side-first-col\">\n            <div className=\"side-title\">LANGUAGES</div>\n            <div className=\"skill\">- Java</div>\n            <div className=\"skill\">- Javascript</div>\n            <div className=\"skill\">- Python</div>\n            <div className=\"skill\">- C</div>\n            <div className=\"skill\">- Kotlin</div>\n          </div>\n          <div className=\"side-second-col\">\n            <div className=\"side-title\">SKILLS & TOOLS</div>\n            <div className=\"skill\">- Node</div>\n            <div className=\"skill\">- Docker</div>\n            <div className=\"skill\">- React & React-Native</div>\n            <div className=\"skill\">- Mobile Development</div>\n            <div className=\"skill\">- Web Development</div>\n          </div>\n        </div>\n      </div>\n\n      <div className=\"footer\">\n        <div\n          onClick={() => {\n            window.open(\n              \"https://www.linkedin.com/in/christianterencecabauatan/\"\n            );\n          }}\n        >\n          <i class=\"fab fa-linkedin icon\" />\n        </div>\n\n        <div\n          onClick={() => {\n            window.open(\"https://github.com/christerence\");\n          }}\n        >\n          <i class=\"fab fa-github icon\" />\n        </div>\n        <div\n          onClick={() => {\n            window.open(\"https://christerence.github.io\");\n          }}\n        >\n          <i class=\"fas fa-folder-open icon\" />\n        </div>\n        <div\n          onClick={() => {\n            alert(\"add me: christiantcab\");\n          }}\n        >\n          <i class=\"fab fa-snapchat-square icon\" />\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default Home;\n","import createHistory from 'history/createBrowserHistory';\n\nexport default createHistory();","import React from \"react\";\nimport { Router, Route } from \"react-router-dom\";\nimport { Home } from './pages';\nimport history from \"./history\";\n\nclass App extends React.Component {\n  render() {\n    return (\n      <Router history={history}>\n        <React.Fragment>\n          <Route path=\"/\" exact component={Home} />\n        </React.Fragment>\n      </Router>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}